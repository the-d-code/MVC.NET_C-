#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sep_2012
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="customers")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertdept(dept instance);
    partial void Updatedept(dept instance);
    partial void Deletedept(dept instance);
    partial void Insertemp(emp instance);
    partial void Updateemp(emp instance);
    partial void Deleteemp(emp instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::sep_2012.Properties.Settings.Default.customersConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<dept> depts
		{
			get
			{
				return this.GetTable<dept>();
			}
		}
		
		public System.Data.Linq.Table<emp> emps
		{
			get
			{
				return this.GetTable<emp>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customers")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _phoneno;
		
		private string _state;
		
		private string _city;
		
		private string _gender;
		
		private System.Nullable<int> _open_balance;
		
		private System.Nullable<int> _an_income;
		
		private System.Nullable<bool> _own_car;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onopen_balanceChanging(System.Nullable<int> value);
    partial void Onopen_balanceChanged();
    partial void Onan_incomeChanging(System.Nullable<int> value);
    partial void Onan_incomeChanged();
    partial void Onown_carChanging(System.Nullable<bool> value);
    partial void Onown_carChanged();
    #endregion
		
		public customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(50)")]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[open balance]", Storage="_open_balance", DbType="Int")]
		public System.Nullable<int> open_balance
		{
			get
			{
				return this._open_balance;
			}
			set
			{
				if ((this._open_balance != value))
				{
					this.Onopen_balanceChanging(value);
					this.SendPropertyChanging();
					this._open_balance = value;
					this.SendPropertyChanged("open_balance");
					this.Onopen_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[an income]", Storage="_an_income", DbType="Int")]
		public System.Nullable<int> an_income
		{
			get
			{
				return this._an_income;
			}
			set
			{
				if ((this._an_income != value))
				{
					this.Onan_incomeChanging(value);
					this.SendPropertyChanging();
					this._an_income = value;
					this.SendPropertyChanged("an_income");
					this.Onan_incomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[own car]", Storage="_own_car", DbType="Bit")]
		public System.Nullable<bool> own_car
		{
			get
			{
				return this._own_car;
			}
			set
			{
				if ((this._own_car != value))
				{
					this.Onown_carChanging(value);
					this.SendPropertyChanging();
					this._own_car = value;
					this.SendPropertyChanged("own_car");
					this.Onown_carChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dept")]
	public partial class dept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dno;
		
		private string _dname;
		
		private EntitySet<emp> _emps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndnoChanging(int value);
    partial void OndnoChanged();
    partial void OndnameChanging(string value);
    partial void OndnameChanged();
    #endregion
		
		public dept()
		{
			this._emps = new EntitySet<emp>(new Action<emp>(this.attach_emps), new Action<emp>(this.detach_emps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dno", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dno
		{
			get
			{
				return this._dno;
			}
			set
			{
				if ((this._dno != value))
				{
					this.OndnoChanging(value);
					this.SendPropertyChanging();
					this._dno = value;
					this.SendPropertyChanged("dno");
					this.OndnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dname", DbType="VarChar(50)")]
		public string dname
		{
			get
			{
				return this._dname;
			}
			set
			{
				if ((this._dname != value))
				{
					this.OndnameChanging(value);
					this.SendPropertyChanging();
					this._dname = value;
					this.SendPropertyChanged("dname");
					this.OndnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dept_emp", Storage="_emps", ThisKey="dno", OtherKey="dno")]
		public EntitySet<emp> emps
		{
			get
			{
				return this._emps;
			}
			set
			{
				this._emps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_emps(emp entity)
		{
			this.SendPropertyChanging();
			entity.dept = this;
		}
		
		private void detach_emps(emp entity)
		{
			this.SendPropertyChanging();
			entity.dept = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emp")]
	public partial class emp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _eno;
		
		private string _ename;
		
		private System.Nullable<int> _sal;
		
		private System.Nullable<int> _dno;
		
		private EntityRef<dept> _dept;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnenoChanging(int value);
    partial void OnenoChanged();
    partial void OnenameChanging(string value);
    partial void OnenameChanged();
    partial void OnsalChanging(System.Nullable<int> value);
    partial void OnsalChanged();
    partial void OndnoChanging(System.Nullable<int> value);
    partial void OndnoChanged();
    #endregion
		
		public emp()
		{
			this._dept = default(EntityRef<dept>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eno", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int eno
		{
			get
			{
				return this._eno;
			}
			set
			{
				if ((this._eno != value))
				{
					this.OnenoChanging(value);
					this.SendPropertyChanging();
					this._eno = value;
					this.SendPropertyChanged("eno");
					this.OnenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ename", DbType="VarChar(50)")]
		public string ename
		{
			get
			{
				return this._ename;
			}
			set
			{
				if ((this._ename != value))
				{
					this.OnenameChanging(value);
					this.SendPropertyChanging();
					this._ename = value;
					this.SendPropertyChanged("ename");
					this.OnenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sal", DbType="Int")]
		public System.Nullable<int> sal
		{
			get
			{
				return this._sal;
			}
			set
			{
				if ((this._sal != value))
				{
					this.OnsalChanging(value);
					this.SendPropertyChanging();
					this._sal = value;
					this.SendPropertyChanged("sal");
					this.OnsalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dno", DbType="Int")]
		public System.Nullable<int> dno
		{
			get
			{
				return this._dno;
			}
			set
			{
				if ((this._dno != value))
				{
					if (this._dept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndnoChanging(value);
					this.SendPropertyChanging();
					this._dno = value;
					this.SendPropertyChanged("dno");
					this.OndnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dept_emp", Storage="_dept", ThisKey="dno", OtherKey="dno", IsForeignKey=true)]
		public dept dept
		{
			get
			{
				return this._dept.Entity;
			}
			set
			{
				dept previousValue = this._dept.Entity;
				if (((previousValue != value) 
							|| (this._dept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dept.Entity = null;
						previousValue.emps.Remove(this);
					}
					this._dept.Entity = value;
					if ((value != null))
					{
						value.emps.Add(this);
						this._dno = value.dno;
					}
					else
					{
						this._dno = default(Nullable<int>);
					}
					this.SendPropertyChanged("dept");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
